Archive member included because of file (symbol)

c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodqi4.o)
                              ./Race.o (__udivmodqi4)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
                              ./Race.o (__udivmodhi4)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
                              ./Led7/Led7.o (__divmodhi4)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
                              c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
                              ./Main.o (__do_copy_data)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
                              ./Main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

tmp                 0x1               ./Main.o
Second              0x2               ./Led7/Led7.o
IndexScanLed        0x1               ./Led7/Led7.o
Input0              0x1               ./Sensor/Sensor.o
GetCommand          0x1               ./Main.o
Input2              0x1               ./Sensor/Sensor.o
DelayTime           0x2               ./Led7/Led7.o
Input3              0x1               ./Sensor/Sensor.o
StorageResult       0x1e              ./Race.o
Input1              0x1               ./Sensor/Sensor.o
CountTimer          0x1               ./Led7/Led7.o
SensorFlag          0x1               ./Sensor/Sensor.o
Player              0x1               ./Race.o
RaceStatus          0x1               ./Race.o
OldInput            0x1               ./Sensor/Sensor.o
Tick                0x1               ./Led7/Led7.o
Lap                 0x1               ./Race.o
ButtonFlag          0x1               ./Sensor/Sensor.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
LOAD ./Main.o
LOAD ./Race.o
LOAD ./Sensor/Sensor.o
LOAD ./RF/RF.o
LOAD ./RCServo/RCServo.o
LOAD ./Led7/Led7.o
LOAD ./EEPROM/EEPROM.o
LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a
LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x73e
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e      0x13e ./Main.o
                0x0000005e                init_Atmega8l
                0x00000074                main
 .text          0x0000019c      0x234 ./Race.o
                0x000001aa                count_down
                0x0000019c                start_racing
                0x000003a6                init_race
                0x00000244                racing
 .text          0x000003d0       0x54 ./Sensor/Sensor.o
                0x000003d0                init_sensor
                0x000003d6                update_input
 .text          0x00000424       0x1e ./RF/RF.o
                0x0000043e                uart_get
                0x00000424                uart_init
                0x00000436                uart_put
 .text          0x00000442       0x2c ./RCServo/RCServo.o
                0x00000442                init_PWM
                0x00000450                handle
                0x0000044a                init_RCServo
                0x00000444                PWM_write
 .text          0x0000046e      0x248 ./Led7/Led7.o
                0x0000046e                init_timer
                0x000004d4                SPI_write
                0x000004b4                init_SPI
                0x000005be                clock_tick
                0x000004de                scan_led
                0x00000600                clear_led
                0x00000620                __vector_9
                0x000004d0                SPI_read
                0x0000052c                update_buffer
                0x000004bc                init_LED7
 .text          0x000006b6       0x1e ./EEPROM/EEPROM.o
                0x000006c6                EEPROM_read
                0x000006b6                EEPROM_write
 .text          0x000006d4        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodqi4.o)
 .text          0x000006d4        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
 .text          0x000006d4        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
 .text          0x000006d4        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .text          0x000006d4        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .text          0x000006d4        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
                0x000006d4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000006d4       0x18 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodqi4.o)
                0x000006d4                __udivmodqi4
 .text.libgcc   0x000006ec       0x28 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
                0x000006ec                __udivmodhi4
 .text.libgcc   0x00000714       0x26 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
                0x00000714                __divmodhi4
                0x00000714                _div
 .text.libgcc   0x0000073a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x0000073a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000073a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
                0x0000073a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000073a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
                0x0000073a                exit
                0x0000073a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000073a        0x4 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x0000073e                _etext = .

.data           0x00800060        0xa load address 0x0000073e
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./Main.o
 .data          0x00800060        0x0 ./Race.o
 .data          0x00800060        0x0 ./Sensor/Sensor.o
 .data          0x00800060        0x0 ./RF/RF.o
 .data          0x00800060        0x0 ./RCServo/RCServo.o
 .data          0x00800060        0xa ./Led7/Led7.o
                0x00800060                led7_data
 .data          0x0080006a        0x0 ./EEPROM/EEPROM.o
 .data          0x0080006a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodqi4.o)
 .data          0x0080006a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
 .data          0x0080006a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
 .data          0x0080006a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .data          0x0080006a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .data          0x0080006a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006a                . = ALIGN (0x2)
                0x0080006a                _edata = .
                0x0080006a                PROVIDE (__data_end, .)

.bss            0x0080006a       0x37 load address 0x00000748
                0x0080006a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006a        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0080006a        0x0 ./Main.o
 .bss           0x0080006a        0x0 ./Race.o
 .bss           0x0080006a        0x0 ./Sensor/Sensor.o
 .bss           0x0080006a        0x0 ./RF/RF.o
 .bss           0x0080006a        0x0 ./RCServo/RCServo.o
 .bss           0x0080006a        0x6 ./Led7/Led7.o
                0x0080006a                ScanBuffer
 .bss           0x00800070        0x0 ./EEPROM/EEPROM.o
 .bss           0x00800070        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodqi4.o)
 .bss           0x00800070        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
 .bss           0x00800070        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
 .bss           0x00800070        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .bss           0x00800070        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800070        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800070        0x2 ./Main.o
                0x00800070                tmp
                0x00800071                GetCommand
 COMMON         0x00800072       0x21 ./Race.o
                0x00800072                StorageResult
                0x00800090                Player
                0x00800091                RaceStatus
                0x00800092                Lap
 COMMON         0x00800093        0x7 ./Sensor/Sensor.o
                0x00800093                Input0
                0x00800094                Input2
                0x00800095                Input3
                0x00800096                Input1
                0x00800097                SensorFlag
                0x00800098                OldInput
                0x00800099                ButtonFlag
 COMMON         0x0080009a        0x7 ./Led7/Led7.o
                0x0080009a                Second
                0x0080009c                IndexScanLed
                0x0080009d                DelayTime
                0x0080009f                CountTimer
                0x008000a0                Tick
                0x008000a1                PROVIDE (__bss_end, .)
                0x0000073e                __data_load_start = LOADADDR (.data)
                0x00000748                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000a1        0x0
                0x008000a1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000a1                PROVIDE (__noinit_end, .)
                0x008000a1                _end = .
                0x008000a1                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(BCRGate.elf elf32-avr)
LOAD linker stubs
